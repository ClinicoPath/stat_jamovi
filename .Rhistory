dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT + AGE, data = dat.g_ent)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT + AGE, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT + AGE, data = dat.g_ent)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT + AGE, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT + AGE, data = dat.g_ent)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT + AGE, data = dat.g_ent)
summary(lm.loss)
summary(lm.discontent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.discontent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT2 + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT2 + WEIGHT, data = dat.g_ent)
summary(lm.loss)
dat.g_ent <- read.table(pipe("pbpaste"), header = T)
lm.loss <- lm(WEIGHT_LOSS ~ DISCONTENT + HEIGHT2 + WEIGHT, data = dat.g_ent)
lm.discontent <- lm(DISCONTENT ~ WEIGHT_LOSS + HEIGHT2 + WEIGHT, data = dat.g_ent)
summary(lm.loss)
library("QuantPsyc", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
lm.beta(lm.loss)
tStat <- read.table(pipe("pbpaste"), header = T)
tStat
t.test(formula = Memory ~ Music, data = tStat, paired = T)
tStat <- read.table(pipe("pbpaste"), header = T)
t.test(formula = Memory ~ Music, data = tStat, paired = T)
chStat <- matrix(c(36,29,25,34,11,5),ncol=3, byrow = T)
chStat
chisq.test(chStat, correct = F)
aStat <- read.table(pipe("pbpaste"), header = T)
aStat
summary(aov(Loss ~ Method, data = aStat))
TukeyHSD(aov(Loss ~ Method, data = aStat))
aStat <- read.table(pipe("pbpaste"), header = T)
summary(aov(Loss ~ Method, data = aStat))
TukeyHSD(aov(Loss ~ Method, data = aStat))
aStat2 <- read.table(pipe("pboaste"), header = T)
aStat2 <- read.table(pipe("pboaste"), header = T)
aStat2 <- read.table(pipe("pbpaste"), header = T)
aStat2
aStat2$Gender.f <- factor(aStat2$Gender, labels = c("Men","Women"))
aStat2$Type.f <- factor(aStat2$Gender, labels = c("Expire","Interrupt","Miss"))
aStat2$Type.f <- factor(aStat2$Type, labels = c("Expire","Interrupt","Miss"))
aStat2
summary(aov(Anger ~ Gender.f*Type.f, data = aStat2))
aStat2 <- read.table(pipe("pbpaste"), header = T)
aStat2$Gender.f <- factor(aStat2$Gender, labels = c("Men","Women"))
aStat2$Type.f <- factor(aStat2$Type, labels = c("Expire","Interrupt","Miss"))
summary(aov(Anger ~ Gender.f*Type.f, data = aStat2))
cStat <- matrix(c(36,29,5,34,11,5),ncol=3)
cStat
cStat <- matrix(c(36,29,5,34,11,5),ncol=3,byrow = T)
cStat
chisq.test(cStat, correct = F)
chisq.test(cStat, correct = T)
cStat <- matrix(c(36,29,10,37,13,5),ncol=3,byrow = T)
chisq.test(cStat, correct = T)
cStat
dat <- matrix(c(80,20,46,22),ncol = 1, byrow = T)
dat
dat <- matrix(c(80,20,46,22),ncol = 2, byrow = T)
dat
chisq.test(dat, correct = F)
dat_a <- c(8,8,5,7,9,7,8,5,7,5)
dat_b <- c(7,4,7,5,4,5,7,6,4,5)
t.test(x = dat_a, y = dat_b, paired = F)
t.test(x = dat_a, y = dat_b, paired = F, var.equal = T)
var.test(x = dat_a, y = dat-b)
var.test(x = dat_a, y = dat_b)
dat <- matrix(c(15,29,29,20,15),ncol = 2, byrow = T)
dat <- matrix(c(15,29,20,15),ncol = 2, byrow = T)
dat
chisq.test(dat)
chisq.test(dat,correct = F)
dat <- matrix(c(15,29,20,15,7,12),ncol = 2, byrow = T)
dat
chisq.test(dat,correct = F)
chisq.test(dat)
datp <- c(31,33,29,23,32,30,33,30,39,30)
datq <- c(71,72,45,38,70,68,56,40,76,54)
mean(datp)
mean(datq)
sd(datp)
sd(datq)
cor.test(datp, datq)
qt(.025,8)
qt(.975,8)
datt2 <- read.table(pipe("pbpaste"),header = )
datt2 <- read.table(pipe("pbpaste"),header = T)
datt2
t.test(formula = Memory ~ Music, data = datt2, var.equal = T)
t.test(formula = Memory ~ Music, data = datt2, paired = T)
qchisq(.05,2)
qchisq(.95,2)
library(readr)
datWeirdSyl <- read_csv("~/Dropbox/research/WeirdBeliefs/Data/2017-BeliefBias-CogExp/DataMerged180129.csv")
View(datWeirdSyl)
library("glmmML", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
save.image("~/Dropbox/research/WeirdBeliefs/Data/2017-BeliefBias-CogExp/DataMerged180129.RData")
dat <- read.table(pipe("pbpaste"),header = T)
dat
dat$Music.f <- factor(dat$Music, labels = c("heal","pops"))
dat
sumary(aov(Memory ~ Music.f, data = dat))
summary(aov(Memory ~ Music.f, data = dat))
dat <- read.table(pipe("pbpaste"),header = T)
dat$Music.f <- factor(dat$Music, labels = c("heal","pops"))
dat
summary(aov(Memory ~ Music.f + Error(factor(PID)), data = dat))
t.test(formula = Memory ~ Music.f, data = dat, var.equal = T)
t.test(formula = Memory ~ Music.f, data = dat, paired = T)
summary(aov(Memory ~ Music.f, data = dat))
library(readr)
BPA_BPS_2016 <- read_csv("Dropbox/research/WeirdBeliefs/Data/2016-crosscultural/analysis201705/BPA_BPS_Culture_201604_OmitVars.csv")
View(BPA_BPS_2016)
library("pequod", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("Rmisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("psych", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("QuantPsyc", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
BPA_BPS_2016$c.Pool <- -1*(BPA_BPS_2016$Code.Pool-2)-0.5
View(BPA_BPS_2016)
load("~/Dropbox/research/WeirdBeliefs/Data/2017-Contradiction/Re-Analysis2018/ESB2017.RData")
View(ESB2017Dialec.SelNoNA)
table(ESB2017Dialec.SelNoNA$c.Pool)
t.test(formula = REI_NFC ~ c.Pool, data = ESB2017Dialec.SelNoNA.NoCentered, var.equal = T)
update.packages()
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 )
datAge <- read.table(pipe("pbpaste"), header = T)
datAge <- read.table(pipe("pbpaste"), header = T)
datAge
tblAge <- matrix(c(87,81,61,30,0,30,114,121,39,15,32,109,105,44,7), ncol = 5)
tblAge
tblAge <- matrix(c(87,81,61,30,0,30,114,121,39,15,32,109,105,44,7), ncol = 5, byrow = T)
tblAge
chisq.test(tblAge, correct = T)
install.packages(c("car", "digest", "effects", "fansi", "ggpubr", "jtools", "later", "lme4", "maptools", "pkgconfig", "rlang", "rstantools", "xtable", "xts", "zoo"))
load("~/Dropbox/research/WeirdBeliefs/Data/2016-crosscultural/analysis201811/ESB2016-ReAnalysis201811.RData")
library(jtools)
library(Hmisc)
library(Rmisc)
library(ggplot2)
library(pequod)
library(psych)
library(QuantPsyc)
library(RColorBrewer)
library(gridExtra)
library(ggcorrplot)
simSlopeCRT.BPA
summary(simSlopeCRT.BPA)
summary(simSlopeCRT.BFH)
summary(simSlopeEXP.BPA)
summary(simSlopeEXP.BFH)
summary(lmres.BPA.AHStt)
lmres.BPA.AHStt$F_change
summary(lmres.BFH.AHStt)
lmres.BFH.AHStt$F_change
install.packages("BayesFactor")
install.packages("brms")
library("psych", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
data("neo")
library(psych)
data()
help(neo)
date(neo)
data(neo)
str(neo)
help(bfi)
help(Harman.5)
help("cattell")
help("epi")
help("epi.bfi")
data("epi.bfi")
describe(epi.bfi)
View(epi.bfi)
View(neo)
hist(epi.bfi$epiE)
library(tidyr)
library(tidyverse)
ggplot(epi.bfi, aes(x = epiE)) + geom_violin()
ggplot(epi.bfi, aes(y = epiE)) + geom_violin()
ggplot(epi.bfi, aes(y = bfneur, x = stateanx)) + geom_point()
ggplot(epi.bfi, aes(y = bfneur, x = stateanx)) + geom_point() + stat_smooth()
ggplot(epi.bfi, aes(y = bfneur, x = stateanx)) + geom_point() + stat_smooth(method = "lm")
ggplot(epi.bfi, aes(y = epiE)) + geom_violin()
ggplot(epi.bfi, aes(x = epiE)) + geom_density()
ggplot(epi.bfi, aes(x = epiE)) + geom_density() + geom_histogram()
library(readr)
dfPers <- read_csv("OneDrive/ドキュメント/Classes/資料/心理統計法/mini-test/2019/Personality.csv")
View(dfPers)
dfPers$f.Sex = factor(dfPers$Sex, labels = ("F","M"))
dfPers$f.Sex = factor(dfPers$Sex, labels = c("F","M"))
library(psych)
describeBy(dfPers, group = "f.Sex", skew = F, ranges = F)
library(readr)
dfPers <- read_csv("OneDrive/ドキュメント/Classes/資料/心理統計法/mini-test/2019/Personality.csv")
View(dfPers)
dfPers$f.Sex = factor(dfPers$Sex, labels = c("F","M"))
describeBy(dfPers, group = "f.Sex", skew = F, ranges = F)
library(tidyverse)
dfAA = read.table(pipe(pbpaste), header = T)
dfAA = read.table(pipe("pbpaste"), header = T)
dfAA
ggplot(dfAA, aes(x = phone, y = country)) + geom_point() + stat_smooth() + theme_classic(base_size = 16) + xlab("Last 2 digits of phone") + ylab("# of African countries")
ggplot(dfAA, aes(x = phone, y = country)) + geom_point() + stat_smooth(method = "lm") + theme_classic(base_size = 16) + xlab("Last 2 digits of phone") + ylab("# of African countries")
ggplot(dfAA, aes(x = phone, y = country)) + geom_jitter() + stat_smooth(method = "lm") + theme_classic(base_size = 16) + xlab("Last 2 digits of phone") + ylab("# of African countries")
cor.test(dfAA$phone,dfAA$country)
ggplot(dfAA, aes(x = phone, y = country)) + geom_jitter() + stat_smooth(method = "lm") + theme_classic(base_size = 16) + xlab("Last 2 digits of phone") + ylab("# of African countries") + annotate("test",x=10,y=90,label = "r = .16, p = .047")
ggplot(dfAA, aes(x = phone, y = country)) + geom_jitter() + stat_smooth(method = "lm") + theme_classic(base_size = 16) + xlab("Last 2 digits of phone") + ylab("# of African countries") + annotate("text",x=10,y=90,label = "r = .16, p = .047")
?annotate
ggplot(dfAA, aes(x = phone, y = country)) + geom_jitter() + stat_smooth(method = "lm") + theme_classic(base_size = 16) + xlab("Last 2 digits of phone") + ylab("# of African countries") + annotate("text",x=10,y=90,label = "paste(italic(r) = .16, italic(p) = .047)")
ggplot(dfAA, aes(x = phone, y = country)) + geom_jitter() + stat_smooth(method = "lm") + theme_classic(base_size = 16) + xlab("Last 2 digits of phone") + ylab("# of African countries") + annotate("text",x=10,y=90,label = "paste(italic(r) = .16, italic(p) = .047)", parse = T)
ggplot(dfAA, aes(x = phone, y = country)) + geom_jitter() + stat_smooth(method = "lm") + theme_classic(base_size = 16) + xlab("Last 2 digits of phone") + ylab("# of African countries") + annotate("text",x=10,y=90,label = "paste(italic(r) \" = .16\", italic(p) \"= .047\")", parse = T)
ggplot(dfAA, aes(x = phone, y = country)) + geom_jitter() + stat_smooth(method = "lm") + theme_classic(base_size = 16) + xlab("Last 2 digits of phone") + ylab("# of African countries") + annotate("text",x=10,y=90,label = "paste(italic(r), \" = .16,\", italic(p), \"= .047\")", parse = T)
ggplot(dfAA, aes(x = phone, y = country)) + geom_jitter() + stat_smooth(method = "lm") + theme_classic(base_size = 16) + xlab("Last 2 digits of phone") + ylab("# of African countries") + annotate("text",x=10,y=90,label = "paste(italic(r), \" = .16, \", italic(p), \"= .047\")", parse = T)
ggplot(dfAA, aes(x = phone, y = country)) + geom_jitter() + stat_smooth(method = "lm") + theme_classic(base_size = 16) + xlab("Last 2 digits of phone") + ylab("# of African countries") + annotate("text",x=10,y=90,label = "paste(italic(r), \" = .16, \", italic(p), \"= .047\")", parse = T, size = 5)
ggplot(dfAA, aes(x = phone, y = country)) + geom_jitter() + stat_smooth(method = "lm") + theme_classic(base_size = 16) + xlab("Last 2 digits of phone") + ylab("# of African countries") + annotate("text",x=10,y=90,label = "paste(italic(r), \" = .16, \", italic(p), \"= .047\")", parse = T, size = 9)
ggplot(dfAA, aes(x = phone, y = country)) + geom_jitter() + stat_smooth(method = "lm") + theme_classic(base_size = 16) + xlab("Last 2 digits of phone") + ylab("# of African countries") + annotate("text",x=10,y=90,label = "paste(italic(r), \" = .16, \", italic(p), \"= .047\")", parse = T, size = 7)
ggplot(dfAA, aes(x = phone, y = country)) + geom_jitter() + stat_smooth(method = "lm") + theme_classic(base_size = 16) + xlab("Last 2 digits of phone") + ylab("# of African countries") + annotate("text",x=20,y=90,label = "paste(italic(r), \" = .16, \", italic(p), \"= .047\")", parse = T, size = 7)
ggplot(dfAA, aes(x = phone, y = country)) + geom_jitter() + stat_smooth(method = "lm") + theme_classic(base_size = 16) + xlab("Last 2 digits of phone") + ylab("# of African countries") + annotate("text",x=18,y=90,label = "paste(italic(r), \" = .16, \", italic(p), \"= .047\")", parse = T, size = 7)
library(readr)
df11 <- read_csv("OneDrive/ドキュメント/Classes/資料/心理統計法特論/dat/Data11-1.csv")
View(df11)
dv = cbind(df11$Spray,df11$Liniment,df11$SkinPatch)
dv
dv = rbind(df11$Spray,df11$Liniment,df11$SkinPatch)
dv
library(readr)
df11l <- read_csv("OneDrive/ドキュメント/Classes/資料/心理統計法特論/dat/Data11-1-long.csv")
View(df11l)
library(lmerTest)
fit = lmer(Pain_Relieve ~ Type + (1|PID), data = df11l)
anova(fit)
library(psych)
dat = read.table(pipe("pbpaste"), header = F)
dat
hist(dat)
hist(dat$V1)
grade = read.table(pipe("pbpaste"),header = F)
hist(grade$V1)
library(tidyverse)
ggplot(grade, aes(x = V1)) + geom_point()
ggplot(grade, aes(x = V1)) + geom_dotplot()
dat = read.table(pipe("pbpaste"),header=F)
dat
hist(dat$V1)
dat2 = read.table(pipe("pbpaste"),header=F)
dat2[dat2$V1 == "z"]$V1 = NA
dat2[dat2$V1 == "z",]$V1 = NA
dat
dat2
dat2 = read.table(pipe("pbpaste"),header=F)
dat2$V1
dat2 = read.table(pipe("pbpaste"),header=F)
dat2$V1
hist(dat2$V1)
ac1 <- read.table(pipe("pbpaste"),header = T)
ac1
library(tidyverse)
ggplot(ac1,aes(x=ac1)) + geom_dotplot() + theme_classic(base_size = 16) + coord_flip()
ggplot(ac1,aes(x=ac1)) + geom_dotplot() + theme_classic(base_size = 16)
ggplot(ac1,aes(x=ac1)) + geom_dotplot(binwidth = 1) + theme_classic(base_size = 16)
?geom_dotplot
ggplot(ac1,aes(x=ac1)) + geom_dotplot(binwidth = 1, dotsize = 0.5) + theme_classic(base_size = 16)
ggplot(ac1,aes(x=ac1)) + geom_histogram() + theme_classic(base_size = 16)
?geom_histogram
ggplot(ac1,aes(x=ac1)) + geom_histogram(binwidth = 1) + theme_classic(base_size = 16)
ggplot(ac1,aes(x=ac1)) + geom_histogram(binwidth = 1, color = "black", fill = "#a0a0a0") + theme_classic(base_size = 16)
ggplot(ac1,aes(x=ac1)) + geom_histogram(binwidth = 1, color = "black", fill = "#a0a0a0") + theme_classic(base_size = 16) + scale_x_continuous(breaks = seq(0,10,1))
mean(ac1$)
mean(ac1$ac1)
median(ac1$ac1)
?geom_vline
ggplot(ac1,aes(x=ac1)) + geom_histogram(binwidth = 1, color = "black", fill = "#a0a0a0") + geom_vline(xintercept = mean(ac1$ac1)) + theme_classic(base_size = 16) + scale_x_continuous(breaks = seq(0,10,1))
ggplot(ac1,aes(x=ac1)) + geom_histogram(binwidth = 1, color = "black", fill = "#a0a0a0") + geom_vline(xintercept = mean(ac1$ac1), linetype = 2) + theme_classic(base_size = 16) + scale_x_continuous(breaks = seq(0,10,1))
ggplot(ac1,aes(x=ac1)) + geom_histogram(binwidth = 1, color = "black", fill = "#a0a0a0") + geom_vline(xintercept = mean(ac1$ac1), linetype = 2) + geom_vline(xintercept = median(ac1$ac1, linetype = 3)) + theme_classic(base_size = 16) + scale_x_continuous(breaks = seq(0,10,1))
ggplot(ac1,aes(x=ac1)) + geom_histogram(binwidth = 1, color = "black", fill = "#a0a0a0") + geom_vline(xintercept = mean(ac1$ac1), linetype = 2) + theme_classic(base_size = 16) + scale_x_continuous(breaks = seq(0,10,1))
ggplot(ac1,aes(x=ac1)) + geom_histogram(binwidth = 1, color = "black", fill = "#a0a0a0") + geom_vline(xintercept = mean(ac1$ac1), linetype = 2) + theme_classic(base_size = 16) + scale_x_continuous(breaks = seq(0,10,1)) + annotate(geom = "text", x = 6, y = 25, label="M = 7.56")
ggplot(ac1,aes(x=ac1)) + geom_histogram(binwidth = 1, color = "black", fill = "#a0a0a0") + geom_vline(xintercept = mean(ac1$ac1), linetype = 2) + theme_classic(base_size = 16) + scale_x_continuous(breaks = seq(0,10,1)) + annotate(geom = "text", x = 6, y = 25, label="M = 7.56", size = 8)
ggplot(ac1,aes(x=ac1)) + geom_histogram(binwidth = 1, color = "black", fill = "#a0a0a0") + geom_vline(xintercept = mean(ac1$ac1), linetype = 2) + theme_classic(base_size = 16) + scale_x_continuous(breaks = seq(0,10,1)) + annotate(geom = "text", x = 6, y = 25, label="M = 7.56", size = 7)
ggplot(ac1,aes(x=ac1)) + geom_histogram(binwidth = 1, color = "black", fill = "#a0a0a0") + geom_vline(xintercept = mean(ac1$ac1), linetype = 2) + theme_classic(base_size = 16) + scale_x_continuous(breaks = seq(0,10,1)) + annotate(geom = "text", x = 6, y = 25, label="M = 7.56", size = 7) + xlab("Achievement Test 1")
library(tidyverse)
library(psych)
df <- read.table(pipe("pbpaste"), header = T)
df
summary(aov(Val ~ A*B, data = df))
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "bar", position = position_dodge(width = .5), fun.y = mean_se)
ggplot(df, aes(x = B, y = Val, color = A)) + geom_boxplot()
ggplot(df, aes(x = B, y = Val, color = A)) + geom_violin() + theme_classic(base_size = 16)
df
summary(aov(Val ~ A*B, data = df))
describeBy(df)
describeBy(df, group = "A")
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "point", position = position_dodge(width = .5), fun.y = mean_se)
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "line", position = position_dodge(width = .5), fun.y = mean_se)
ggplot(df, aes(x = B, y = Val, color = A)) + geom_boxplot()
ggplot(df, aes(x = B, y = Val, color = A)) + geom_violin() + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "errorbar", fun.y = mean_se) + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "errorbar", fun.data = mean_se) + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = .5), size = .3) + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = .5), size = .3) + stat_summary(geom = "point", fun.y = mean, position = position_dodge(width = .5), size = .5) + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = .5), size = .3) + stat_summary(geom = "point", fun.y = mean, position = position_dodge(width = .5), size = 3) + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = .5), size = .5, width = .3) + stat_summary(geom = "point", fun.y = mean, position = position_dodge(width = .5), size = 3) + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = .5), size = .5, width = .3) + stat_summary(geom = "point", fun.y = mean, position = position_dodge(width = .5), size = 3) + stat_summary(geom = "line", position = position_dodge(width = .5), size = .5) + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = .5), size = .5, width = .3) + stat_summary(geom = "point", fun.y = mean, position = position_dodge(width = .5), size = 3) + stat_summary(fun.data = mean_se, geom = "line", position = position_dodge(width = .5)) + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = .5), size = .5, width = .3) + stat_summary(geom = "point", fun.y = mean, position = position_dodge(width = .5), size = 3) + geom_line(stat = "summary", fun.y = mean) + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = .5), size = .5, width = .3) + stat_summary(geom = "point", fun.y = mean, position = position_dodge(width = .5), size = 3) + stat_summary(fun.y = mean, geom = "line") + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = .5), size = .5, width = .3) + stat_summary(geom = "point", fun.y = mean, position = position_dodge(width = .5), size = 3) + stat_summary(fun.y = mean, geom = "line", stat = "identity") + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = .5), size = .5, width = .3) + stat_summary(geom = "point", fun.y = mean, position = position_dodge(width = .5), size = 3) + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = .5), size = .5, width = .3) + stat_summary(geom = "bar", fun.y = mean, position = position_dodge(width = .5), size = 3) + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A, fill = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = .5), size = .5, width = .3) + stat_summary(geom = "bar", fun.y = mean, position = position_dodge(width = .5), size = 0.5) + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A, fill = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = .5), size = .5, width = .3) + stat_summary(geom = "bar", fun.y = mean, position = position_dodge(width = .5), width = 0.3) + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A, fill = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = .7), size = .5, width = .3) + stat_summary(geom = "bar", fun.y = mean, position = position_dodge(width = .7), width = 0.5) + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A, fill = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = 1), size = .5, width = .3) + stat_summary(geom = "bar", fun.y = mean, position = position_dodge(width = 1), width = 0.7) + theme_classic(base_size = 16)
ggplot(df, aes(x = B, y = Val, color = A, fill = A)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = 0.8), size = .5, width = .3) + stat_summary(geom = "bar", fun.y = mean, position = position_dodge(width = 0.8), width = 0.7) + theme_classic(base_size = 16)
df
df$Gender <- df$A
df[df$A == "a1",]$Gender <- "Female"
df[,df$A == "a1"]$Gender <- "Female"
df[,df$A == "a1"]$Gender
df[df$A == "a1",]$Gender
df[df$A = "a1",]$Gender
df[df$A == "a1",]$Gender
df
df[,df$A == "a2"]$Gender <- "Male"
df
mudate(df, Gender = if_else(A == "a1",1,2))
mutate(df, Gender = if_else(A == "a1"mutate()
?seq
?rep
rep(1,15)
df$Gender <- c(rep(1,15),rep(2,15))
df
df$Gender <- factor(df$Gender, labels = c("Female","Male"))
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = 0.8), size = .5, width = .3) + stat_summary(geom = "bar", fun.y = mean, position = position_dodge(width = 0.8), width = 0.7) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine")
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = 0.8), size = .5, width = .3) + stat_summary(geom = "bar", fun.y = mean, position = position_dodge(width = 0.8), width = 0.7) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0,1))
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = 0.8), size = .5, width = .3) + stat_summary(geom = "bar", fun.y = mean, position = position_dodge(width = 0.8), width = 0.7) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(1,1))
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = 0.8), size = .5, width = .3) + stat_summary(geom = "bar", fun.y = mean, position = position_dodge(width = 0.8), width = 0.7) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.8))
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = 0.8), size = .5, width = .3) + stat_summary(geom = "bar", fun.y = mean, position = position_dodge(width = 0.8), width = 0.7) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
df
summary(aov(Val ~ B*Gender, data = df))
summary(aov(Val ~ Gender*B, data = df))
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = 0.8), size = .5, width = .3) + stat_summary(geom = "line", fun.y = mean, position = position_dodge(width = 0.8), width = 0.7) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = 0.8), size = .5, width = .3) + stat_summary(geom = "point", fun.y = mean, position = position_dodge(width = 0.8), width = 0.7) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = 0.8), size = .5, width = .3) + stat_summary(geom = "point", fun.y = mean, position = position_dodge(width = 0.8), size = 2) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = 0.8), size = .5, width = .3) + stat_summary(geom = "point", fun.y = mean, position = position_dodge(width = 0.8), size = 5) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, size = .5, width = .3) + stat_summary(geom = "point", fun.y = mean, size = 5) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, size = .3, width = .3) + stat_summary(geom = "point", fun.y = mean, size = 5) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, size = .5, width = .1) + stat_summary(geom = "point", fun.y = mean, size = 5) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, size = .5, width = .1) + stat_summary(geom = "point", fun.y = mean, size = 5) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85)) + geom_line()
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, size = .5, width = .1) + stat_summary(geom = "point", fun.y = mean, size = 5) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
df
Rmisc::summarySE(df, measurevar=Val,groupvars = c("Gender","B"))
Rmisc::summarySE(df, measurevar= "Val",groupvars = c("Gender","B"))
dfMean <- Rmisc::summarySE(df, measurevar= "Val",groupvars = c("Gender","B"))
dfMean
ggplot(dfMean, aes(x = B, y = Val, color = Gender, fill = Gender)) + geom_point() theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(dfMean, aes(x = B, y = Val, color = Gender, fill = Gender)) + geom_point() + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(dfMean, aes(x = B, y = Val, color = Gender, fill = Gender)) + geom_point(size = 5) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(dfMean, aes(x = B, y = Val, color = Gender, fill = Gender)) + geom_point(size = 3) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(dfMean, aes(x = B, y = Val, color = Gender, fill = Gender)) + geom_point(size = 3) + geom_errorbar(aes(ymin = Val-se, ymax=Val+se)) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(dfMean, aes(x = B, y = Val, color = Gender, fill = Gender)) + geom_point(size = 3) + geom_errorbar(aes(ymin = Val-se, ymax=Val+se), width = .2) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(dfMean, aes(x = B, y = Val, color = Gender, fill = Gender)) + geom_point(size = 3) + geom_errorbar(aes(ymin = Val-se, ymax=Val+se), width = .2) + geom_line() + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
dfMean
dfMean$bnum <- c(1,2,3,1,2,3)
dfMean
ggplot(dfMean, aes(x = B, y = Val, color = Gender, fill = Gender)) + geom_point(size = 3) + geom_errorbar(aes(ymin = Val-se, ymax=Val+se), width = .2) + geom_line(aes(x = bum)) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(dfMean, aes(x = bnum, y = Val, color = Gender, fill = Gender)) + geom_point(size = 3) + geom_errorbar(aes(ymin = Val-se, ymax=Val+se), width = .2) + geom_line() + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(dfMean, aes(x = bnum, y = Val, color = Gender, fill = Gender)) + geom_point(size = 3) + geom_errorbar(aes(ymin = Val-se, ymax=Val+se), width = .1) + geom_line() + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(dfMean, aes(x = bnum, y = Val, color = Gender, fill = Gender)) + geom_point(size = 3) + geom_errorbar(aes(ymin = Val-se, ymax=Val+se), width = .1) + geom_line() + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85)) + scale_x_continuous(breaks = seq(1,3,1))
ggplot(dfMean, aes(x = bnum, y = Val, color = Gender, fill = Gender)) + geom_point(size = 3) + geom_errorbar(aes(ymin = Val-se, ymax=Val+se), width = .1) + geom_line() + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85)) + scale_x_continuous(breaks = seq(1,3,1)) + coord_cartesian(ylim = c(1,9))
ggplot(dfMean, aes(x = bnum, y = Val, color = Gender, fill = Gender)) + geom_point(size = 3) + geom_errorbar(aes(ymin = Val-se, ymax=Val+se), width = .1) + geom_line() + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85)) + scale_x_continuous(breaks = seq(1,3,1)) + coord_cartesian(ylim = c(1,9)) + scale_y_continuous(breaks = seq(1,9,1))
ggplot(dfMean, aes(x = bnum, y = Val, color = Gender, fill = Gender)) + geom_point(size = 3) + geom_errorbar(aes(ymin = Val-se, ymax=Val+se), width = .1) + geom_line() + theme_classic(base_size = 16) + ylab("Effect") + xlab("Medicine(B)") + theme(legend.position = c(0.2,0.85)) + scale_x_continuous(breaks = seq(1,3,1)) + coord_cartesian(ylim = c(1,9)) + scale_y_continuous(breaks = seq(1,9,1))
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, size = .5, width = .1) + stat_summary(geom = "point", fun.y = mean, size = 5) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(df, aes(x = B, y = Val, color = Gender, fill = Gender)) + stat_summary(geom = "errorbar", fun.data = mean_se, position = position_dodge(width = 0.8), size = .5, width = .3) + stat_summary(geom = "bar", fun.y = mean, position = position_dodge(width = 0.8), width = 0.7) + theme_classic(base_size = 16) + ylab("Effect") + xlab("medicine") + theme(legend.position = c(0.2,0.85))
ggplot(df, aes(x = Gender, y = Val)) + stat_summary(geom = "errorbar", fun.data = mean_se) + stat_summary(geom = "bar", fun.y = mean) + theme_classic(base_size = 16) + ylab("Effect") + theme(legend.position = c(0.2,0.85))
ggplot(df, aes(x = Gender, y = Val)) + stat_summary(geom = "errorbar", fun.data = mean_se, size = .2) + stat_summary(geom = "bar", fun.y = mean, size = .6) + theme_classic(base_size = 16) + ylab("Effect") + theme(legend.position = c(0.2,0.85))
ggplot(df, aes(x = Gender, y = Val)) + stat_summary(geom = "errorbar", fun.data = mean_se, width = .2) + stat_summary(geom = "bar", fun.y = mean, width = .6) + theme_classic(base_size = 16) + ylab("Effect") + theme(legend.position = c(0.2,0.85))
ggplot(df, aes(x = Gender, y = Val)) + stat_summary(geom = "errorbar", fun.data = mean_se, width = .2) + stat_summary(geom = "bar", fun.y = mean, width = .6) + theme_classic(base_size = 16) + ylab("Effect") + theme(legend.position = c(0.2,0.85)) + coord_cartesian(ylim = c(1,9)) + scale_y_continuous(breaks = seq(1,9,1))
ggplot(df, aes(x = B, y = Val)) + stat_summary(geom = "errorbar", fun.data = mean_se, width = .2) + stat_summary(geom = "bar", fun.y = mean, width = .6) + theme_classic(base_size = 16) + ylab("Effect") + theme(legend.position = c(0.2,0.85)) + coord_cartesian(ylim = c(1,9)) + scale_y_continuous(breaks = seq(1,9,1))
ggplot(df, aes(x = B, y = Val)) + stat_summary(geom = "errorbar", fun.data = mean_se, width = .2) + stat_summary(geom = "bar", fun.y = mean, width = .6) + theme_classic(base_size = 16) + ylab("Effect") + theme(legend.position = c(0.2,0.85)) + coord_cartesian(ylim = c(1,9)) + scale_y_continuous(breaks = seq(1,9,1)) + xlab("Medicine")
summary(aov(Val ~ Gender, df))
summary(aov(Val ~ Gender*B, df))
df
summary(aov(Val ~ B, data = subset(df, Gender == "Female")))
summary(aov(Val ~ B, data = subset(df, Gender == "Male")))
summary(aov(Val ~ Gender, data = subset(df, B == "b1")))
summary(aov(Val ~ Gender, data = subset(df, B == "b2")))
summary(aov(Val ~ Gender, data = subset(df, B == "b3")))
TukeyHSD(aov(Val ~ Gender, data = subset(df, B == "b2")))
TukeyHSD(aov(Val ~ B, data = subset(df, Gender == "Male")))
summary(aov(Val ~ B, data = subset(df, Gender == "Male")))
describe(subset(df,Gender=="Male"))
describeBy(subset(df,Gender=="Male"), group = "B")
describeBy(subset(df,Gender=="Male"), group = "B", skew = F, range = F)
chisq.test(matrix(c(61,39,23,32),ncol = 2, byrow = T))
chisq.test(matrix(c(61,39,23,32),ncol = 2, byrow = T), correct = F)
x <- c(6,7,9,8,5,7,8,6)
y <- c(3,6,6,7,6,2,4,2)
t.test(x,y,var.equal = T)
y <- c(3,6,7,8,6,3,4,3)
t.test(x,y,var.equal = T)
chisq.test(matrix(c(70,15,65,65,20,35),ncol=3,byrow = T),correct = F)
chisq.test(matrix(c(75,15,65,65,25,35),ncol=3,byrow = T),correct = F)
chisq.test(matrix(c(75,15,65,65,20,40),ncol=3,byrow = T),correct = F)
chisq.test(matrix(c(75,10,65,65,25,40),ncol=3,byrow = T),correct = F)
df <- data.frame(y = c(8,6,7,9,3,4,3,4,6,7,5,9), x = (c,c,c,c,r,r,r,r,j,j,j,j))
?data.frame
df <- data.frame(eval = c(8,6,7,9,3,4,3,4,6,7,5,9), bgm = (c,c,c,c,r,r,r,r,j,j,j,j))
df <- data.frame()
df$eval c(8,6,7,9,3,4,3,4,6,7,5,9)
df$eval <- c(8,6,7,9,3,4,3,4,6,7,5,9)
eval <- c(8,6,7,9,3,4,3,4,6,7,5,9)
bgm <- c(c,c,c,c,r,r,r,r,j,j,j,j)
bgm <- c("c","c","c","c","r","r","r","r","j","j","j","j")
df <- data.frame(eval,bgm)
df
summary(aov(eval ~ bgm, df))
eval <- c(8,6,7,9,3,4,3,4,6,7,6,9)
df <- data.frame(eval,bgm)
summary(aov(eval ~ bgm, df))
eval <- c(8,6,7,9,3,4,4,5,6,7,5,8)
df <- data.frame(eval,bgm)
summary(aov(eval ~ bgm, df))
TukeyHSD(aov(eval ~ bgm, df))
fisher.test(matrix(c(0,48,16,95),ncol=2,byrow = T))
table(matrix(c(0,48,16,95),ncol = 2, byrow = T))
matrix(c(0,48,16,95),ncol = 2,byrow = T)
chisq.test(matrix(c(0,48,16,95),ncol = 2,byrow = T),correct = T)
fisher.test(matrix(c(0,48,16,95),ncol = 2,byrow = T))
?fisher.test
setwd("~/")
setwd("~/OneDrive/Documents/Research/Projects/Statistics/course/stat_jamovi")
